package net.javaguides.springboot.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import net.javaguides.springboot.bean.Student;

@RestController
public class StudentController {

	/** http://localhost:8080/student */
	@GetMapping("student")
	public ResponseEntity<Student> getStudent() {
		Student student = new Student(1, "Ramesh", "Fadatare");
		return new ResponseEntity<>(student, HttpStatus.OK);
	}
	
	/** http://localhost:8080/students */
	@GetMapping("students")
	public List<Student> getStudents() {
		List<Student> students = new ArrayList<>();
		students.add(new Student(1, "Ramesh", "Fadatare"));
		students.add(new Student(2, "umesh", "Fadatare"));
		students.add(new Student(1, "Ram", "Fadatare"));
		students.add(new Student(1, "Sanjay", "Fadatare"));
		return students;
	}
	
	/** Spring Boot Rest API with Path Variable */
	/** {id} - URI template variable */
	// http://localhost:8080/students/1/ramesh/dadatare
	@GetMapping("students/{id}/{first-name}/{last-name}")
	public Student studentPathVariable(
										@PathVariable("id") int studentId,
										@PathVariable("first-name") String firstName,
										@PathVariable("last-name") String lastName
										) {
		return new Student(studentId, firstName, lastName);
	}
	
	/** Spring Boot Rest Api with Request Param */
	/** http://localhost:8080/students/query?id=1&firstName=Ramesh&lastName=Fadatare */
	@GetMapping("students/query")
	public Student studentRequestVariable(
										   @RequestParam int id,
										   @RequestParam String firstName,
										   @RequestParam String lastName
			) {
		return new Student(id, firstName, lastName);
	}
	
	/** Spring Boot Rest Api that handles HTTP Post Request - creating new resource */
	/** @PostMapping and @RequestBody */
	/** http://localhost:8080/students/create */
	@PostMapping("students/create")
	@ResponseStatus(HttpStatus.CREATED)
	public Student createStudent(@RequestBody Student student) {
		System.out.println(student.getId());
		System.out.println(student.getFirstName());
		System.out.println(student.getLastName());
		return student;
	}
	
	/** Spring Boot Rest Api that handles HTTP PUT Request - updating existing resource */
	@PutMapping("student/{id}/update")
	public Student updateStudent(
								  @RequestBody Student student, 
								  @PathVariable("id") int studentId
								) {
		System.out.println(student.getFirstName());
		System.out.println(student.getLastName());
		return student;
	}
	
	/** Spring boot Rest Api that handles HTTP Delete Request - deleting the existing resource */
	@DeleteMapping("student/{id}/delete")
	public String deleteStudent(@PathVariable("id") int studentId) {
		System.out.println(studentId);
		return "Student deleted successfully!";
	}
}
